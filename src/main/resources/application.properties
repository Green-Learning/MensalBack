spring.jpa.database=postgresql
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true

#spring.jps.hibernate.ddl-auto=validate
#spring.jps.hibernate.ddl-auto=update
#spring.jps.hibernate.ddl-auto=create
spring.jps.hibernate.ddl-auto=create-drop

spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.database.driverClassname=org.postgresql.Driver

spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://pizzariagln.c96u8sisi93d.us-east-2.rds.amazonaws.com:5432/pizzaria
spring.datasource.username=pizzaria_gln
spring.datasource.password=1ay6a&2Wa2;LVL!e

#server.port=8080

security.jwt.chave-secret=${JWT_SECRET:cGFvZGVxdWVpam8=}

#
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true

#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto= update

logging.file.name=aplication.log

server.port=443
server.ssl.enabled=true
server.ssl.key-store=back/src/main/resources/chaveiro.p12
server.ssl.key-store-password=senha123;
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=1

keycloak.realm = GreenLearning
keycloak.auth-server-url = https://172.31.94.174:8443/
keycloak.ssl-required = external
keycloak.resource = greenlearning-backend
keycloak.use-resource-role-mappings = true
keycloak.bearer-only = true


